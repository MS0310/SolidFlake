{
	"info": {
		"_postman_id": "cbced9aa-1b05-4a19-b3ac-2de54a269930",
		"name": "PMScriptCollection",
		"description": "this is for demo purpose",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GETChainingRedRes",
			"item": [
				{
					"name": "Chaining 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7d37b0e-4e69-440a-aff3-91c423ee04d5",
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"var value1 = jsonData[0].woeid;",
									"console.log(value1);",
									"",
									"//set env variable ",
									"",
									"pm.environment.set(\"woeid\", value1);",
									"",
									"console.log(pm.environment.get(\"woeid\"));",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Title Validation\", function () {",
									"    var jsonData = pm.response.json();",
									"    var expectedTitle = jsonData[0].title;",
									"    var actualTitle = \"london\";",
									"pm.expect(expectedTitle).equal(actualTitle, \"Title Validtion match failed\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.metaweather.com/api/location/search/?query=london",
							"protocol": "https",
							"host": [
								"www",
								"metaweather",
								"com"
							],
							"path": [
								"api",
								"location",
								"search",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "london"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Chaining2",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "49d2df7f-ad9d-4e2d-a246-13c5a63afd53",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check response value\", function () {",
									"      var jsonData = pm.response.json();",
									"      var titleVar1 = jsonData.title;",
									"      var titleVar2 = \"London\";",
									"      if(pm.expect(titleVar1).equal(titleVar2, \"Does not match with expected value \" + titleVar2)){",
									"            //console.log(jsonData.title);",
									"            console.log(\"Expected value is \" + titleVar2 + \" :Value received was: \" + titleVar1 + \" <<Test Passed>>\");",
									"      }",
									"      ",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://www.metaweather.com/api/location/{{woeid}}",
							"protocol": "https",
							"host": [
								"www",
								"metaweather",
								"com"
							],
							"path": [
								"api",
								"location",
								"{{woeid}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ManualPMGETTest",
			"item": [
				{
					"name": "GETLocationTest",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.metaweather.com/api/location/search/?query=london",
							"protocol": "https",
							"host": [
								"www",
								"metaweather",
								"com"
							],
							"path": [
								"api",
								"location",
								"search",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "london"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GetWoeidAPI",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://www.metaweather.com/api/location/44418",
							"protocol": "https",
							"host": [
								"www",
								"metaweather",
								"com"
							],
							"path": [
								"api",
								"location",
								"44418"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PutUpdateScripts",
			"item": [
				{
					"name": "PutRequest1",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c55c92c8-32db-4bb3-97b2-49ab8e8e0af0",
								"exec": [
									"",
									"var jsonData = pm.response.json();",
									"var recvdlVar1 = jsonData.job;",
									"",
									"console.log(recvdlVar1);",
									"",
									"expectedVal1=\"zion resident\";",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    if (pm.expect(recvdlVar1).equal(expectedVal1 , \"Not Matched with \" + expectedVal1))",
									"    {",
									"        console.log(\"ExpectedVal1 is\" + expectedVal1 + \"value recieved is \" + recvdlVar1 + \"Pass\")",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"zion resident\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PostCreateScripts",
			"item": [
				{
					"name": "PostScripts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8553dd5f-1db9-469b-9612-b4f3ee41454c",
								"exec": [
									"",
									"",
									"var jsonData = pm.response.json();",
									"Actualvalue1 = jsonData.name;",
									"console.log(Actualvalue1);",
									"",
									"pm.test(\"Names Validation\", function () {",
									"    var ExpectedValue1 = \"morpheus\";",
									"pm.expect(ExpectedValue1).equal(Actualvalue1, \"Names Validtion match\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"morpheus\",\n    \"job\": \"leader1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GetScripts",
			"item": [
				{
					"name": "GetListUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "94a239d2-cb99-41ab-a453-323f7d657e77",
								"exec": [
									"// take the name from file and assert if response body have this name ",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    console.log(\"Status code function Pass\")",
									"});",
									"",
									"",
									"pm.test(\"Get value from file and assert the value\", function () {",
									"   console.log(\"Data driven test\");",
									"   var jsonData = pm.response.json();",
									"   var recvdName = jsonData.data[0].first_name;",
									"   console.log(recvdName);",
									"   pm.expect(recvdName).to.equal(pm.iterationData.get(\"Name\"));",
									"   ",
									"   ",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}